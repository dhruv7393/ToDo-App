name: Build and Sign Android APK

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to build'
        required: true
        default: '1.0.0'

jobs:
  build-and-sign:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Setup Java JDK
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '17'
        
    - name: Setup Android SDK
      uses: android-actions/setup-android@v3
      
    - name: Install dependencies
      run: npm ci
      
    - name: Setup Expo CLI
      run: npm install -g @expo/cli
      
    - name: Prebuild Android
      run: npx expo prebuild --platform android --clean
      
    - name: Create local.properties
      run: |
        echo "sdk.dir=$ANDROID_HOME" > android/local.properties
        
    - name: Make gradlew executable
      run: chmod +x android/gradlew
      
    - name: Decode Keystore
      if: ${{ secrets.ANDROID_KEYSTORE_BASE64 }}
      run: |
        echo "${{ secrets.ANDROID_KEYSTORE_BASE64 }}" | base64 --decode > android/app/release.keystore
        
    - name: Create keystore.properties
      if: ${{ secrets.ANDROID_KEYSTORE_BASE64 }}
      run: |
        echo "storePassword=${{ secrets.ANDROID_KEYSTORE_PASSWORD }}" > android/keystore.properties
        echo "keyPassword=${{ secrets.ANDROID_KEY_PASSWORD }}" >> android/keystore.properties
        echo "keyAlias=${{ secrets.ANDROID_KEY_ALIAS }}" >> android/keystore.properties
        echo "storeFile=release.keystore" >> android/keystore.properties
        
    - name: Build signed APK
      run: |
        cd android
        if [ -f keystore.properties ]; then
          ./gradlew assembleRelease
        else
          echo "No keystore found, building unsigned APK"
          ./gradlew assembleRelease
        fi
        
    - name: Build signed AAB
      run: |
        cd android
        if [ -f keystore.properties ]; then
          ./gradlew bundleRelease
        else
          echo "No keystore found, building unsigned AAB"
          ./gradlew bundleRelease
        fi
        
    - name: Upload signed APK
      uses: actions/upload-artifact@v4
      with:
        name: signed-android-apk
        path: android/app/build/outputs/apk/release/app-release.apk
        
    - name: Upload signed AAB
      uses: actions/upload-artifact@v4
      with:
        name: signed-android-aab
        path: android/app/build/outputs/bundle/release/app-release.aab
      continue-on-error: true
        
    - name: Create Release
      if: startsWith(github.ref, 'refs/tags/')
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false
        
    - name: Upload Release APK
      if: startsWith(github.ref, 'refs/tags/')
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: android/app/build/outputs/apk/release/app-release.apk
        asset_name: ToDoApp-${{ github.ref_name }}.apk
        asset_content_type: application/vnd.android.package-archive
